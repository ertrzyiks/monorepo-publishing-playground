name: Release snapshot

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        required: false
        default: ''

  workflow_call:
    inputs:
      ref:
        type: string
        required: false
        default: ''
    outputs:
      publishedPackages:
        value: ${{ jobs.release.outputs.publishedPackages }}
      numberOfPackages:
        value: ${{ jobs.release.outputs.numberOfPackages }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      publishedPackages: ${{ steps.package_list.outputs.LIST }}
      numberOfPackages: ${{ steps.packages_number.outputs.NUMBER_OF_PACKAGES }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Get SHA
        id: get_sha
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Dependencies
        run: yarn

      - name: Snapshot
        run: yarn changeset version --snapshot $REF
        env:
          REF: ${{ steps.get_sha.outputs.SHA }}

      - name: Collect the number of packages
        id: packages_number
        run: |
          echo "NUMBER_OF_PACKAGES=$(git ls-files --modified | grep package.json | wc -l)" >> $GITHUB_OUTPUT

      - name: Collect all the packages
        id: package_list
        run: |
          listChangedPackages () {
            for filename in `git ls-files --modified | grep package.json`; do
              cat "$filename" | jq -r '.name + "@" + .version'
            done
          }

          if [[ "$NUMBER_OF_PACKAGES" -eq "0" ]]; then
            echo "LIST=" >> $GITHUB_OUTPUT
          else
            echo 'LIST<<EOF' >> $GITHUB_OUTPUT
            listChangedPackages | grep $SHA >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
          fi

        env:
          SHA: ${{ steps.get_sha.outputs.SHA }}
          NUMBER_OF_PACKAGES: ${{ steps.packages_number.outputs.NUMBER_OF_PACKAGES }}

      - name: Publish the snapshot
        run: |
          yarn changeset publish --tag alpha --no-git-tag --snapshot
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output
        if: steps.packages_number.outputs.NUMBER_OF_PACKAGES > 0
        run: |
          echo "$LIST" | awk '{print " - `" $0 "`"}' >> $GITHUB_STEP_SUMMARY
        env:
          LIST: ${{ steps.package_list.outputs.LIST }}



